<component name="org.nuxeo.ecm.retention.rules.contrib.test">

  <extension target="org.nuxeo.ecm.retention.RetentionService"
    point="rules">
    <rule>
      <id>myTestRuleId</id>
      <begin-condition event="documentModified"
        expression="document.getType()=='Folder'">
      </begin-condition>
      <begin-delay />
      <retention-duration>1Y2M4D</retention-duration> 
      <retention-reminder-days />  <!-- no of days at the end to send a retention expires approaching reminder -->
      <begin-action>Document.Lock</begin-action>
      <end-action>Document.Unlock</end-action>
      <end-condition expression="">
      </end-condition>
    </rule>

    <rule>
      <id>myTestRuleId2</id>
      <begin-condition event="documentModified"
        expression="document.isFolder()">
      </begin-condition>
      <begin-delay />
      <retention-duration>1Y2M4D</retention-duration> 
      <retention-reminder-days />  <!-- no of days at the end to send a retention expires approaching reminder -->
      <begin-action>Document.Lock</begin-action>
      <end-condition expression="">
      </end-condition>
    </rule>

    <rule>
      <id>retentionOnCreation</id>
      <begin-condition event="documentCreated"
        expression="document.getType()=='File'">
      </begin-condition>
      <begin-delay />
      <retention-duration>P1Y2M4D</retention-duration> 
      <retention-reminder-days />  <!-- no of days at the end to send a retention expires approaching reminder -->
      <begin-action>Document.Lock</begin-action>
      <end-action>Document.Unlock</end-action>
      <end-condition expression="">
      </end-condition>
    </rule>

    <rule>
      <id>retentionWithDelay</id>
      <begin-condition expression="document.getType()=='File'">
      </begin-condition>
      <begin-delay>1D</begin-delay>
      <retention-duration>P1D</retention-duration> 
      <retention-reminder-days />  <!-- no of days at the end to send a retention expires approaching reminder -->
      <begin-action>Document.Lock</begin-action>
      <end-action>Document.Unlock</end-action>
      <end-condition expression="">
      </end-condition>
    </rule>

    <rule>
      <id>retentionWithReminder</id>
      <begin-condition expression="document.getType()=='File'">
      </begin-condition>
      <begin-delay></begin-delay>
      <retention-duration>P1Y</retention-duration> 
      <retention-reminder-days>3</retention-reminder-days>  <!-- no of days at the end to send a retention expires approaching reminder -->
      <begin-action>Document.Lock</begin-action>
      <end-action>Document.Unlock</end-action>
      <end-condition expression="">
      </end-condition>
    </rule>
    
     <rule>
      <id>retentionStartsWhenSettingProperty</id>
      <begin-condition expression="document.getPropertyValue('record:min_cutoff_at').before(currentDate)">
      </begin-condition>
      <begin-delay></begin-delay>
      <retention-duration>P1Y</retention-duration> 
      <retention-reminder-days>2</retention-reminder-days>  <!-- no of days at the end to send a retention expires approaching reminder -->
      <begin-action>Document.Lock</begin-action>
      <end-action>Document.Unlock</end-action>
      <end-condition expression="">
      </end-condition>
    </rule>
    
    <rule>
      <id>RuleWithActions</id>
      <retention-duration expression="">1Y</retention-duration> 
      <begin-actions>
      	<action order="1" operation="Document.Lock"></action>
	  </begin-actions>
      <!--  These operations called one after the other don't really make sense
            it's for testing -->
      <end-actions>
      	<action order="1" operation="Document.Unlock"></action>
      	<action order="2" operation="Document.Trash"></action>
      	<action order="3" operation="Document.Delete"></action>
	  </end-actions>
    </rule>
    
    <rule>
      <id>TooManyActionsShouldFailValidation</id>
      <retention-duration expression="">1Y</retention-duration>
      <!--  Cannot have both a begin-action and begin-actions -->
      <begin-action>Document.Lock</begin-action>
      <begin-actions>
      	<action order="1" operation="Document.Lock"></action>
	  </begin-actions>
    </rule>
    
    <!-- No condition, no events, no delays, ... -->
    <rule>
      <id>SimpleRule</id>
      <retention-duration expression="">1Y</retention-duration>
    </rule>

  </extension>


</component>